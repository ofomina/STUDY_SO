<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="CRUD.Person">
<Super>%Base</Super>
<TimeCreated>64113,55753.742781</TimeCreated>

<Method name="Get">
<ClassMethod>1</ClassMethod>
<FormalSpec>id</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
		s list = ##class(%ListOfDataTypes).%New()		
		if $data(id) {
			s rset = ##class(Data.Person).GetOne(id)				
		} else {
			s rset = ##class(Data.Person).GetAll()				
		}
		WHILE rset.Next() {
				s arr = ##class(%ArrayOfDataTypes).%New()
				s id = rset.Data("ID")
				d arr.SetAt(id, "ID")
				d arr.SetAt(rset.Data("Name"), "Name")
				d arr.SetAt(rset.Data("Surname"), "Surname")
				d arr.SetAt(rset.Data("Patronymic"), "Patronymic")
				d arr.SetAt($ZD(rset.Data("DOB"),4), "DOB")
				d arr.SetAt(rset.Data("Gender"), "Gender")
				d arr.SetAt(rset.Data("DocType"), "DocType")
				d arr.SetAt(rset.Data("DocSeries"), "DocSer")
				d arr.SetAt(rset.Data("DocNum"), "DocNum")
				d arr.SetAt(rset.Data("SNILS"),"SNILS")
				
				//Получение данных связанных сущностей
				//Приемы
				s recList = ##class(Data.Receptions).GetPersReceptions(id)
				d arr.SetAt(recList,"Receptions")
				//Страховые полисы
				s policesList = ##class(Data.OMSPolices).GetPersPolices(id)
				d arr.SetAt(policesList,"OMSPolices")
					
				d list.Insert(arr)	
			}
		if (list.Count() = 0) {
			s str = {"errorMessage":"В таблице отсутствует запись с указанным ID","errorCode":-1}
			w str.$toJSON()	
		} else  {
			d list.$toJSON()
		}
		//d ##class(%ZEN.Auxiliary.jsonSQLProvider).%WriteJSONFromSQL("select * from data.person")
		q $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
